---
layout: post
title: "Самый короткий мануал по iptables на русском языке"
date: '2013-09-20 10:40:00'
tags:
- linux
- iptables
- firewall
- howto
---

Попробуем в этой статье изложить всю суть iptables. В iptables есть пять основных сущностей:

-  Таблицы
-  Цепочки
-  Правила
-  Условия
-  Действия

# Таблицы

Как работать с таблицами:

iptables -t <цепочка></цепочка>

Вообще - таблица это набор цепочек. По умолчанию существуют несколько таблиц (и цепочек внутри них):

## filter:

*   INPUT - идущий на сам сервер трафик
*   OUTPUT - идущий от самого сервер трафик
*   FORWARD - идущий через сервер трафик

## mangle:

*   PREROUTING - весь трафик до роутинга и фильтров
*   INPUT,&nbsp;
*   FORWARD,&nbsp;
*   OUTPUT,&nbsp;
*   POSTROUTING - весь трафик после роутинга и фильтра

## nat:

*   PREROUTING - здесь можно перенаправлять трафик
*   OUTPUT
*   POSTROUTING - здесь можно выдавать трафик за свой и маскировать серые адресаКлюч -t означает указание таблицы. Если не указывать - используется таблица filter.

# Цепочки

задаются после **ключей**:

*   -I <цепочка> ﻿<номер> - вставить правило в определённое место в цепочке, по умолчанию - в начало.
*   -A <цепочка>- добавить правило в конец цепочки
*   -D <цепочка> <номер> - удалить правило, можно задавать номер, можно условие, по условию удаляется не всегда.
*   -L <цепочка> - просмотреть цепочку.

# Правила

добавляются в цепочки. Правила состоят из условия и действия, и то и другое - необязательно.

# Условия

самые популярные - это:

- -p <протокол> - указать для какого протокола будет срабатывать это правило.
- -s <ip адрес> - с какого адреса пришёл этот пакет
- -d <ip адрес> - на какой адрес идёт этот пакет
- --sport <source port> - с какого порта пришёл пакет
- --dport <dest port> - на какой порт идёт пакет.

P.S: указывать порт можно только для tcp / udp пакетов.

# Действия
То что делать с пакетом, если он соответствует условию правила.

iptables -A FORWARD -j <действие>

Может быть как встроенным действием, так и направлением в цепочку. Популярные действия:

*   ACCEPT - принять пакет, дальше пакет по цепочкам не пойдёт, независимо от вложенности цепочек.
*   DROP - заблокировать пакет.
*   RETURN - выкинуть пакет из текущей цепочки в предыдущую.
*   SNAT - изменить source адрес пакета (работает в nat POSTROUTING)
*   DNAT - изменить dest адрес пакета (работает в nat PREROUTING)
*   &lt;Цепочка&gt; - направить пакет в цепочку.Основная суть - пакеты идут сверху вниз по правилам, заходя во все цепочки на своём пути, если соответствует условиям.