---
title: Как работает сетевой стек в 7 пунктов
---

1. Сетевые карты - бывают с поддержкой многоочерёдности, бывают без. Без - обычно бюджетное говно в десктоп.
2. Процессоры - бывают многоядерными, бывает что в серваке несколько процессоров.
3. Память, NUMA. Обычно в последнем случае у каждого процессора есть "своя" и "чужая" память, ну то есть он может лезть и в чужую, но это будет дольше чем в свою. Это называется NUMA-нода и обычно она включает в себя набор ядер. Бывает так, что NUMA-нод нет и память общая для обоих ядер.
4. Как работают сетёвки.
	1. IRQ (top-half): Сетёвка пишет пакеты в свою внутреннюю память, получает прерывание, пишет его в оперативку (DMA там, всё такое) и делает пометку что у неё есть пакеты, которые надо обработать. В оперативке под неё выделяется кольцевой буфер в той же NUMA-ноде, что и CPU, который его обрабатывает. Этот кольцевой буфер - и есть очередь из пункта 1, то есть их может быть несколько и они могут обрабатываться параллельно.
	2. Softirq (bottom half): сетевой стек периодически проверяет сетёвки, не надо ли ничего обработать. Это собственно уже и есть реальная обработка пакетов, то есть из кольцевых буферов выгребаются пакеты и процессятся, файрволы там, наты, сессии, вот это всё. Иногда даже до реального приложения доходит. Там посреди всего этого кстати ещё есть софтверный аналог многоочерёдности и может спасти в случае с дешёвой сетёвкой с 1 очередью.
	3. Cache locality. Если пакет пошёл по очереди на определённом CPU и попал в приложение, которое работает там же - вам адово повезло, всё будет работать максимально быстро.
